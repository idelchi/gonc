// Command gonc provides secure file encryption with support for deterministic
// and non-deterministic modes. It offers parallel processing capabilities and
// configurable file extensions for encrypted/decrypted outputs.
//
// Basic usage:
//
//	gonc [flags] command [flags] [paths...]
//
// The encryption key can be provided via command line flag or environment variable
// in hex-encoded format (32 or 64 bytes). Files can be encrypted with either
// standard (non-deterministic) or deterministic mode.
package main

import (
	"fmt"
	"os"

	"github.com/idelchi/gonc/internal/parse"
)

var version = "unknown - unofficial & generated by unknown"

// main initializes and runs the CLI application.
// It exits with code 1 if an error occurs.
func main() {
	if err := parse.Execute(version); err != nil {
		fmt.Fprintln(os.Stderr, err.Error())

		os.Exit(1)
	}
}
